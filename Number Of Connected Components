class Solution:
    def countComponents(self, n: int, edges: List[List[int]]) -> int:
        par=[i for i in range(n)]
        rank=[0]*n
        def find(node):
            res=node
            while res!=par[res]:
                par[res]=par[par[res]]
                res=par[res]
            return res
        def union(n1,n2):
            p1,p2 = find(n1), find(n2)
            if p1==p2:
                return 0
            if rank[p2]>rank[p1]:
                par[p1]=p2
                rank[p2]+=rank[p1]
            else:
                rank[p1]>rank[p2]
                par[p2]=par[p1]
                rank[p1]+=rank[p2]
            return 1
        res=n
        for n1,n2 in edges:
            res-=union(n1,n2)
        return res
